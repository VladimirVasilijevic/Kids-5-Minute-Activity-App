name: Optimized Deploy Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # Security scan job (runs first)
  security-scan:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '18'

      - name: Run security scan
        uses: ./.github/actions/security-scan
        with:
          scan-dependencies: 'true'
          scan-code: 'true'

  # Build and deploy web application
  build-and-deploy-web:
    runs-on: ubuntu-latest
    environment: production
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '18'

      - name: Create environment configuration
        uses: ./.github/actions/create-environment
        with:
          environment: 'production'
          firebase-project: ${{ secrets.FIREBASE_PROJECT_ID }}
          firebase-api-key: ${{ secrets.FIREBASE_API_KEY }}
          firebase-auth-domain: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          firebase-storage-bucket: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          firebase-messaging-sender-id: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          firebase-app-id: ${{ secrets.FIREBASE_APP_ID }}
          firebase-measurement-id: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Build web application
        uses: ./.github/actions/build-web
        with:
          configuration: 'production'
          upload-artifact: 'false'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: vaspitac-app/dist/vaspitac-app
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy production build to GitHub Pages'

  # Deploy Firebase services
  deploy-firebase:
    runs-on: ubuntu-latest
    needs: security-scan
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '18'

      - name: Setup Firebase CLI
        uses: ./.github/actions/setup-firebase
        with:
          firebase-project: ${{ secrets.FIREBASE_PROJECT_ID }}
          environment: 'production'

      - name: Deploy Firebase services
        working-directory: vaspitac-app/firebase
        run: |
          # Create service account key file
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > serviceAccountKey-prod.json
          
          # Set environment variable for authentication
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/serviceAccountKey-prod.json"
          
          # Deploy Firestore rules and indexes
          firebase deploy --only firestore:rules,firestore:indexes --config firebase.prod.json
          
          # Deploy Storage rules
          firebase deploy --only storage --config firebase.prod.json
          
          # Deploy Functions if they exist
          if [ -d "functions" ]; then
            firebase deploy --only functions --config firebase.prod.json
          fi
          
          # Clean up service account key
          rm -f serviceAccountKey-prod.json

  # Final verification job
  verify-deployment:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-web, deploy-firebase]
    steps:
      - name: Verify deployment
        run: |
          echo "üöÄ Production deployment completed successfully!"
          echo "üì± Production site: https://vladimirvasilijevic.github.io/Kids-5-Minute-Activity-App/"
          echo "‚ö†Ô∏è  Remember to configure Firebase API key restrictions for this domain" 