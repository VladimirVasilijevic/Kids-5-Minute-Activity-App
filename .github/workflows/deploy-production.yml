name: Deploy Production to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    concurrency:
      group: "production-deployment"
      cancel-in-progress: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'vaspitac-app/package-lock.json'

    - name: Install dependencies
      working-directory: vaspitac-app
      run: |
        # Try npm ci first, fallback to npm install if lock file is out of sync
        if ! npm ci --prefer-offline --no-audit; then
          echo "‚ö†Ô∏è npm ci failed, trying npm install to sync package-lock.json..."
          npm install
          echo "‚úÖ Dependencies installed successfully"
        else
          echo "‚úÖ Dependencies installed with npm ci"
        fi

    - name: Verify environment secrets
      working-directory: vaspitac-app
      run: |
        # Verify all required Firebase secrets are set
        if [ -z "${{ secrets.FIREBASE_API_KEY }}" ]; then
          echo "‚ùå FIREBASE_API_KEY is not set"
          exit 1
        fi
        if [ -z "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
          echo "‚ùå FIREBASE_PROJECT_ID is not set"
          exit 1
        fi
        echo "‚úÖ All required Firebase secrets are configured"

    - name: Create production environment
      working-directory: vaspitac-app
      run: |
        # ‚ö†Ô∏è SECURITY WARNING: Firebase API key will be visible in compiled JS
        # Ensure proper restrictions are configured in Firebase Console:
        # - HTTP referrers: your-domain.com, *.your-domain.com
        # - App package names: com.vaspitac.app (for Android)
        # - IP addresses: GitHub Pages IP ranges
        cat <<EOF > src/environments/environment.ts
        export const environment = {
          production: true,
          firebase: {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          }
        }
        EOF
        echo "‚úÖ Production environment created"

    - name: Lint code
      working-directory: vaspitac-app
      run: npm run lint

    - name: Run tests
      working-directory: vaspitac-app
      run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

    - name: Build Angular app (Production)
      working-directory: vaspitac-app
      run: |
        echo "üèóÔ∏è Building production version..."
        npm run build -- --configuration production --base-href /Kids-5-Minute-Activity-App/
        echo "‚úÖ Production build completed"

    - name: Verify build output
      working-directory: vaspitac-app
      run: |
        if [ ! -d "dist/vaspitac-app" ]; then
          echo "‚ùå Build output directory not found"
          exit 1
        fi
        echo "üìÅ Build output size:"
        du -sh dist/vaspitac-app
        echo "‚úÖ Build verification passed"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: vaspitac-app/dist/vaspitac-app
        publish_branch: gh-pages
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Deploy production build to GitHub Pages'

    - name: Verify deployment
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üì± Production site: https://vladimirvasilijevic.github.io/Kids-5-Minute-Activity-App/"
        echo "‚ö†Ô∏è  Remember to configure Firebase API key restrictions for this domain" 