name: Deploy Development for Testing

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  deploy-development:
    runs-on: ubuntu-latest
    environment: development
    concurrency:
      group: "development-deployment"
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'vaspitac-app/package-lock.json'

    - name: Install dependencies
      working-directory: vaspitac-app
      run: |
        # Try npm ci first, fallback to npm install if lock file is out of sync
        if ! npm ci --prefer-offline --no-audit; then
          echo "‚ö†Ô∏è npm ci failed, trying npm install to sync package-lock.json..."
          npm install
          echo "‚úÖ Dependencies installed successfully"
        else
          echo "‚úÖ Dependencies installed with npm ci"
        fi

    - name: Install Firebase CLI
      working-directory: vaspitac-app
      run: |
        npm install -g firebase-tools
        firebase --version

    - name: Create service account key file
      working-directory: vaspitac-app
      run: |
        # Create service account key file from GitHub secret
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_DEV }}' > firebase/serviceAccountKey-dev.json
        echo "‚úÖ Service account key file created"

    - name: Authenticate with Firebase
      working-directory: vaspitac-app
      run: |
        # Use the development project
        firebase use development
        # Authenticate using service account key
        firebase auth:export --project ${{ secrets.FIREBASE_PROJECT_ID_DEV }} --token "${{ secrets.FIREBASE_TOKEN }}" || echo "Auth export not needed"
        echo "‚úÖ Firebase authentication configured"

    - name: Verify development environment secrets
      working-directory: vaspitac-app
      run: |
        # Verify development Firebase secrets are set
        if [ -z "${{ secrets.FIREBASE_API_KEY_DEV }}" ]; then
          echo "‚ùå FIREBASE_API_KEY_DEV is not set"
          exit 1
        fi
        if [ -z "${{ secrets.FIREBASE_PROJECT_ID_DEV }}" ]; then
          echo "‚ùå FIREBASE_PROJECT_ID_DEV is not set"
          exit 1
        fi
        echo "‚úÖ All required development Firebase secrets are configured"

    - name: Create development environment
      working-directory: vaspitac-app
      run: |
        # üîß DEVELOPMENT: Using development Firebase project
        cat <<EOF > src/environments/environment.ts
        export const environment = {
          production: false,
          firebase: {
            apiKey: "${{ secrets.FIREBASE_API_KEY_DEV }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN_DEV }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID_DEV }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET_DEV }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID_DEV }}",
            appId: "${{ secrets.FIREBASE_APP_ID_DEV }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID_DEV }}"
          }
        }
        EOF
        echo "‚úÖ Development environment created"

    - name: Lint code
      working-directory: vaspitac-app
      run: npm run lint

    - name: Run tests
      working-directory: vaspitac-app
      run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

    - name: Build Angular app (Development)
      working-directory: vaspitac-app
      run: |
        echo "üèóÔ∏è Building development version..."
        npm run build -- --configuration development --base-href /Kids-5-Minute-Activity-App/
        echo "‚úÖ Development build completed"

    - name: Upload development build artifact
      uses: actions/upload-artifact@v4
      with:
        name: development-build
        path: vaspitac-app/dist/vaspitac-app
        retention-days: 7

    - name: Verify development build
      working-directory: vaspitac-app
      run: |
        if [ ! -d "dist/vaspitac-app" ]; then
          echo "‚ùå Development build output directory not found"
          exit 1
        fi
        echo "üìÅ Development build output size:"
        du -sh dist/vaspitac-app
        echo "‚úÖ Development build verification passed"
        echo "üîß Development build ready for testing" 