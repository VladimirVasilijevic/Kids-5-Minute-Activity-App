name: Firebase Deploy Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT: ana-vaspitac-prod-e7ee4

jobs:
  # Security scan job (runs first)
  security-scan:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '18'

      - name: Run security scan
        uses: ./.github/actions/security-scan
        with:
          scan-dependencies: 'true'
          scan-code: 'true'

  # Build and test job
  build-and-test:
    runs-on: ubuntu-latest
    environment: production
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '18'

      - name: Create environment configuration
        uses: ./.github/actions/create-environment
        with:
          environment: 'production'
          firebase-project: ${{ env.FIREBASE_PROJECT }}
          firebase-api-key: ${{ secrets.FIREBASE_API_KEY }}
          firebase-auth-domain: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          firebase-storage-bucket: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          firebase-messaging-sender-id: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          firebase-app-id: ${{ secrets.FIREBASE_APP_ID }}
          firebase-measurement-id: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Install dependencies
        working-directory: vaspitac-app
        run: npm ci
        
      - name: Run tests
        working-directory: vaspitac-app
        run: npm run test -- --browsers=ChromeHeadless --watch=false
        
      - name: Build application (Production)
        working-directory: vaspitac-app
        run: npm run build:prod
        
      - name: Verify build output
        working-directory: vaspitac-app
        run: |
          echo "üîç Verifying build output..."
          ls -la dist/vaspitac-app/
          echo "üì¶ Build verification complete!"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: vaspitac-app/dist/
          retention-days: 1

  # Firebase hosting deployment job
  deploy-firebase-hosting:
    runs-on: ubuntu-latest
    environment: production
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: vaspitac-app/

      - name: Setup Firebase Hosting
        uses: ./.github/actions/setup-firebase-hosting
        with:
          service-account-key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          project: ${{ env.FIREBASE_PROJECT }}

      - name: Deploy to Firebase Hosting
        uses: ./.github/actions/deploy-firebase-hosting
        with:
          working-directory: vaspitac-app
          project-id: ${{ env.FIREBASE_PROJECT }}

  # Final verification job
  verify-deployment:
    runs-on: ubuntu-latest
    needs: deploy-firebase-hosting
    environment: production
    steps:
      - name: Verify deployment
        run: |
          echo "üöÄ Production deployment completed successfully!"
          echo "üåê Production site: https://${{ env.FIREBASE_PROJECT }}.web.app"
          echo "‚úÖ All checks passed!"
