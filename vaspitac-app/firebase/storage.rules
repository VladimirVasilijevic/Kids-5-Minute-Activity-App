rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Public content - anyone can read
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Premium content - subscription required
    match /premium/{allPaths=**} {
      allow read: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.subscription.status in ['active', 'trial'];
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Blog images - admin only
    match /blog-images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Activity images - admin only
    match /activity-images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User avatars - users can upload their own
    match /avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Profile avatars - any authenticated user can upload (more permissive for testing)
    match /profile-avatars/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Admin uploads - admin only
    match /admin-uploads/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Temporary uploads - any authenticated user (for testing)
    match /temp-uploads/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Digital files - require authentication and access verification
    match /digital-files/{fileName} {
      allow read: if request.auth != null && 
        // Check if user has active access to this file
        firestore.get(/databases/(default)/documents/user_access/$(request.auth.uid + '_' + fileName)).data.isActive == true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Digital files by ID - alternative access pattern
    match /digital-files-by-id/{fileId}/{fileName} {
      allow read: if request.auth != null && 
        // Check if user has active access to this file ID
        firestore.get(/databases/(default)/documents/user_access/$(request.auth.uid + '_' + fileId)).data.isActive == true;
      allow write: if request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
} 